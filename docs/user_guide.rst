==========
User Guide
==========

Understanding the geometry of the phase space of a dynamical system is a fundamental step towards the development of a complete picture of the underlying dynamics. In this context, the implementation of trajectory diagnostic mathematical techniques that can provide relevant information about the geometry of the structures characterizing transport in phase space has become an essential ingredient for undertaking research projects in Nonlinear Dynamics.

The LDDS Python software represents a contribution in this direction, by providing the user with a working implementation of the method of 
Lagrangian descriptors. The basic idea behind this methodology, that can be easily applied to continuous, discrete and stochastic dynamical systems, is that phase space structure is enconded in the initial conditions of the system, and this information can be extracted from the properties of the trajectories generated from these initial conditions. A Lagrangian descriptor is a scalar function defined on initial 
condition sets that assings to every point in phase space a real number which is calculated by accummulating the values taken by a non-negative function along the trajectory originating from that initial condition, as it is propagated forward and backward in time. Many definitions of Lagrangian descriptors (LDs) exist in the literature, depending on the choice of the non-negative function used to construct the method. Examples of such functions include the arclength of the trajectory, the p-norm of the components of the vector field defining the dynamical system under study, the Maupertuis classical action, etc. There is no definition of LDs that is better than the rest, and the choice depends on the dynamical characteristics of the system addressed. In this sense, there is always an initial testing stage when one would like to apply this tool to a given dynamical system. The LDDS package gives the possibility of working with the versions of the non-negative functions mentioned above, and offers the user the possibility to implement alternative definitions.
